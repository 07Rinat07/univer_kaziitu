# Лекция 11-12: Списки (Подробное изложение)
# 1. Списки (одномерные массивы)
# Список в Python (тип list) — это структура данных, которая может хранить множество элементов. Основные свойства:

# Список может содержать элементы любого типа (числа, строки, списки).
# Индексация начинается с 0 (нулевой элемент — первый).
# К элементам можно обращаться по отрицательным индексам (отрицательные индексы указывают на элементы с конца списка).
# Пример:
# python
# Копировать код
# Primes = [2, 3, 5, 7, 11, 13]

# print(Primes[0])  # 2 - первый элемент
# print(Primes[1])  # 3 - второй элемент
# print(Primes[-1])  # 13 - последний элемент
# print(len(Primes))  # 6 - длина списка
# 2. Методы разделения и объединения
# Списки могут быть созданы из строки, а также преобразованы обратно в строку.

# Метод split()
# Этот метод разбивает строку на список подстрок, используя указанный разделитель.

# python
# Копировать код
# text = "Python, Java, C++"
# languages = text.split(", ")  # Разделяем строку по ", "
# print(languages)  # ['Python', 'Java', 'C++']
# Метод join()
# Объединяет элементы списка в строку, используя указанный разделитель.

# python
# Копировать код
# new_text = ", ".join(languages)  # Объединяем элементы с ", " между ними
# print(new_text)  # 'Python, Java, C++'
# Пример объединения и разделения:
# python
# Копировать код
# text = "apple;banana;cherry"
# fruits = text.split(";")  # ['apple', 'banana', 'cherry']
# print(fruits)

# new_text = " | ".join(fruits)  # 'apple | banana | cherry'
# print(new_text)
# 3. Генераторы списков
# Генераторы списков позволяют быстро создавать списки с использованием циклов и условий.

# Создание списка с помощью генератора:
# python
# Копировать код
# squares = [x**2 for x in range(10)]  # Квадраты чисел от 0 до 9
# print(squares)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
# С условием:
# python
# Копировать код
# even_squares = [x**2 for x in range(10) if x % 2 == 0]  # Квадраты четных чисел
# print(even_squares)  # [0, 4, 16, 36, 64]
# 4. Срезы
# Срезы позволяют извлекать части списка.

# Синтаксис срезов:
# python
# Копировать код
# list[start:stop:step]
# start: индекс начала (включительно).
# stop: индекс конца (не включительно).
# step: шаг (по умолчанию 1).
# Примеры срезов:
# python
# Копировать код
# Primes = [2, 3, 5, 7, 11, 13]

# subset = Primes[1:4]  # Элементы с индексами 1, 2, 3
# print(subset)  # [3, 5, 7]

# reversed_list = Primes[::-1]  # Разворачиваем список
# print(reversed_list)  # [13, 11, 7, 5, 3, 2]

# step_list = Primes[::2]  # Каждый второй элемент
# print(step_list)  # [2, 5, 11]
# 5. Пример с Tkinter: Поле ввода и окно сообщения
# Tkinter — это библиотека Python для создания графического интерфейса.

# Пример программы:
# python
# Копировать код
# from tkinter import *
# from tkinter import messagebox

# # Функция для обработки события кнопки
# def f1():
#     messagebox.showinfo("Сообщение", message.get())  # Показываем сообщение

# root = Tk()  # Создаем главное окно
# root.title("Пример Tkinter")
# root.geometry("300x250")

# # Поле ввода текста
# message = StringVar()
# message_entry = Entry(textvariable=message)
# message_entry.place(relx=0.5, rely=0.1, anchor="c")  # Размещаем поле

# # Кнопка для подтверждения
# message_button = Button(text="Нажми меня", command=f1)
# message_button.place(relx=0.5, rely=0.5, anchor="c")  # Размещаем кнопку

# root.mainloop()  # Запуск главного цикла приложения
# Объяснение работы программы:
# Пользователь вводит текст в поле Entry.
# При нажатии кнопки текст из поля отображается в диалоговом окне (messagebox.showinfo()).
# Рекомендации для практики:
# Работа с индексами: Создайте список из первых 10 чисел и выведите:

# Второй элемент.
# Последние два элемента.
# Список в обратном порядке.
# Объединение и разделение: Напишите программу, которая:

# Разделяет строку по запятым в список.
# Соединяет этот список обратно в строку с другим разделителем.
# Использование генераторов: Напишите генератор, который создает список чисел от 1 до 50, делящихся на 5.

# Работа с Tkinter: Создайте окно с двумя кнопками: первая отображает введенное сообщение, а вторая очищает поле ввода.

