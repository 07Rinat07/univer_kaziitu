# Функции и рекурсия
# Задачи:
# Функции
# Локальные и глобальные переменные
# Рекурсия
# 1. Функции
# Функции — это изолированные от остальной части программы блоки кода, которые могут принимать параметры, выполнять определенные действия и возвращать значение. В Python функции определяются с помощью ключевого слова def.

# Пример:

# python
# Копировать код
# def add(a, b):
#     return a + b

# result = add(5, 3)  # Вызываем функцию
# print(result)  # Вывод: 8
# В этом примере функция add принимает два параметра a и b, выполняет их сумму и возвращает результат.

# Открытие и сохранение файла с использованием Tkinter:
# python
# Копировать код
# from tkinter import *
# from tkinter import filedialog as fd

# def insert_text():
#     file_name = fd.askopenfilename()  # Открытие диалога для выбора файла
#     with open(file_name) as f:
#         s = f.read()  # Чтение содержимого файла
#     text.insert(1.0, s)  # Вставка содержимого в текстовое поле

# def extract_text():
#     file_name = fd.asksaveasfilename(
#         filetypes=(("TXT files", "*.txt"),
#                    ("HTML files", "*.html;*.htm"),
#                    ("All files", "*.*"))
#     )  # Открытие диалога для сохранения файла
#     with open(file_name, 'w') as f:
#         s = text.get(1.0, END)  # Получение содержимого текстового поля
#         f.write(s)  # Запись содержимого в файл

# root = Tk()
# text = Text(width=50, height=25)
# text.grid(columnspan=2)

# b1 = Button(text="Открыть", command=insert_text)
# b1.grid(row=1, column=0, sticky=E)

# b2 = Button(text="Сохранить", command=extract_text)
# b2.grid(row=1, column=1, sticky=W)

# root.mainloop()
# В этом примере:

# Функция insert_text открывает диалог для выбора файла и вставляет его содержимое в текстовое поле.
# Функция extract_text открывает диалог сохранения и сохраняет текущее содержимое текстового поля в файл.
# 2. Локальные и глобальные переменные
# Локальные переменные: переменные, определенные внутри функции и доступные только внутри этой функции.
# Глобальные переменные: переменные, доступные в любой части программы.
# Пример:

# python
# Копировать код
# x = 10  # Глобальная переменная

# def my_function():
#     y = 5  # Локальная переменная
#     print(x)  # Доступ к глобальной переменной
#     print(y)  # Доступ к локальной переменной

# my_function()
# print(x)  # Доступ к глобальной переменной вне функции
# В данном примере:

# Переменная x доступна и внутри функции, и вне её.
# Переменная y доступна только в пределах функции my_function.
# 3. Рекурсия
# Рекурсия — это процесс, когда функция вызывает саму себя. Важно установить условие выхода из рекурсии, чтобы избежать бесконечного вызова.

# Пример:

# python
# Копировать код
# def factorial(n):
#     if n == 0:  # Базовый случай
#         return 1
#     else:
#         return n * factorial(n - 1)  # Рекурсивный вызов

# print(factorial(5))  # Вывод: 120
# Здесь функция factorial вызывает саму себя до тех пор, пока n не достигнет 0 — базового случая.

# Пример с рекурсией на вычислении чисел Фибоначчи:
# python
# Копировать код
# def fibonacci(n):
#     if n <= 0:
#         return 0
#     elif n == 1:
#         return 1
#     else:
#         return fibonacci(n-1) + fibonacci(n-2)

# print(fibonacci(7))  # Вывод: 13
# В этом примере функция fibonacci вызывает себя рекурсивно, пока не достигнет базового случая (0 или 1).

# Методические указания по выполнению задач
# Определение функций: Функция должна выполнять конкретные действия и принимать параметры. Например, определите функцию, которая находит минимум и максимум из списка.

# Работа с локальными и глобальными переменными: Создайте функцию, которая изменяет глобальную переменную и возвращает её обновленное значение. Оставьте эту переменную неизмененной вне функции.

# Рекурсия: Определите рекурсивную функцию, которая рассчитывает сумму элементов списка.

# python
# Копировать код
# def sum_list(lst):
#     if len(lst) == 0:  # Базовый случай
#         return 0
#     else:
#         return lst[0] + sum_list(lst[1:])
# Работа с Tkinter и функциями: Создайте приложение с двумя кнопками:

# Одна кнопка вызывает функцию, которая увеличивает значение на экране.
# Другая кнопка вызывает функцию, которая уменьшает значение.
# Примеры с файловыми операциями: Напишите функцию, которая сохраняет содержимое текстового поля в файл при клике на кнопку "Сохранить" в приложении Tkinter.

