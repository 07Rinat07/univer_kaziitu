# Лекция 11-12: Списки (подробно)

# 1. Списки (одномерные массивы)
# Списки в Python представляют собой последовательности, которые могут содержать элементы любых типов (целые числа, строки, другие списки). К элементам можно обращаться по индексам.

# Пример работы со списками
# python
# Копировать код
# Primes = [2, 3, 5, 7, 11, 13]

# print(Primes[0])     # 2 - первый элемент списка
# print(Primes[1])     # 3 - второй элемент списка
# print(Primes[-1])    # 13 - последний элемент списка
# print(len(Primes))   # 6 - длина списка
# Особенности:
# Положительная индексация: Считается слева направо, начиная с 0.
# Отрицательная индексация: Считается справа налево, начиная с -1 (последний элемент).
# 2. Методы разделения и объединения
# Метод split()
# Разделяет строку на список элементов по заданному разделителю.

# python
# Копировать код
# text = "Python, Java, C++"
# languages = text.split(", ")  # Разделяем строку на список
# print(languages)  # ['Python', 'Java', 'C++']
# Метод join()
# Объединяет элементы списка в строку с заданным разделителем.

# python
# Копировать код
# new_text = ", ".join(languages)  # Объединяем элементы списка
# print(new_text)  # 'Python, Java, C++'
# Комбинированный пример:
# python
# Копировать код
# text = "apple, banana, cherry"
# fruits = text.split(", ")        # ['apple', 'banana', 'cherry']
# new_text = " - ".join(fruits)    # 'apple - banana - cherry'
# print(new_text)
# 3. Генераторы списков
# Генераторы позволяют создавать списки кратким способом с использованием цикла и условий.

# Пример генератора:
# python
# Копировать код
# # Создаем список квадратов чисел от 0 до 9
# squares = [x**2 for x in range(10)]
# print(squares)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
# Условие в генераторе:
# python
# Копировать код
# # Список четных чисел от 0 до 19
# evens = [x for x in range(20) if x % 2 == 0]
# print(evens)  # [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
# 4. Срезы (операции со списками)
# Срезы позволяют извлекать части списка, используя индексы. Синтаксис:

# python
# Копировать код
# list[start:stop:step]
# start: Начало среза (включительно).
# stop: Конец среза (не включительно).
# step: Шаг между элементами.
# Примеры:
# python
# Копировать код
# Primes = [2, 3, 5, 7, 11, 13]

# subset = Primes[1:4]  # [3, 5, 7]
# print(subset)

# reversed_list = Primes[::-1]  # [13, 11, 7, 5, 3, 2] - список в обратном порядке
# print(reversed_list)

# every_second = Primes[::2]  # [2, 5, 11] - каждый второй элемент
# print(every_second)
# 5. Пример с использованием Tkinter
# Tkinter — это встроенная библиотека Python для создания графического интерфейса.

# Пример программы:
# python
# Копировать код
# from tkinter import *
# from tkinter import messagebox

# # Функция для вывода сообщения
# def f1():
#     messagebox.showinfo("Сообщение", message.get())

# # Создаем основное окно
# root = Tk()
# root.title("Пример Tkinter")
# root.geometry("300x200")

# # Поле ввода
# message = StringVar()
# entry = Entry(root, textvariable=message)
# entry.place(relx=0.5, rely=0.3, anchor="center")

# # Кнопка
# button = Button(root, text="Показать сообщение", command=f1)
# button.place(relx=0.5, rely=0.5, anchor="center")

# # Запуск приложения
# root.mainloop()
# Как работает программа:
# Пользователь вводит текст в поле ввода.
# Нажимает кнопку.
# Появляется всплывающее окно с введенным текстом.
# 6. Практические задания
# Задание 1: Работа с индексами и срезами
# Напишите программу, которая:

# Создаёт список из первых 10 натуральных чисел.
# Выводит:
# Второй элемент списка.
# Последние три элемента списка.
# Список в обратном порядке.
# python
# Копировать код
# numbers = list(range(1, 11))
# print("Второй элемент:", numbers[1])
# print("Последние три элемента:", numbers[-3:])
# print("Список в обратном порядке:", numbers[::-1])
# Задание 2: Обработка списка строк
# Создайте список слов, разделённых запятыми из строки, и соберите их обратно в одну строку.

# python
# Копировать код
# text = "cat, dog, bird"
# words = text.split(", ")
# print("Список слов:", words)

# joined_text = " | ".join(words)
# print("Объединённая строка:", joined_text)
# Задание 3: Генерация списка
# Создайте список квадратов чисел от 1 до 20, которые делятся на 3.

# python
# Копировать код
# squares = [x**2 for x in range(1, 21) if x % 3 == 0]
# print("Квадраты чисел, делящихся на 3:", squares)
