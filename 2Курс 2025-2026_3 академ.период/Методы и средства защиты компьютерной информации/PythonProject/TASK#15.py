from tkinter import *
from tkinter import filedialog as fd

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞ –∏ –≤—Å—Ç–∞–≤–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
def insert_text():
    file_name = fd.askopenfilename()
    if file_name:
        with open(file_name, 'r', encoding='utf-8') as f:
            s = f.read()
        text.delete(1.0, END)
        text.insert(1.0, s)

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –≤ —Ñ–∞–π–ª
def extract_text():
    file_name = fd.asksaveasfilename(
        filetypes=(("TXT files", "*.txt"),
                   ("HTML files", "*.html;*.htm"),
                   ("All files", "*.*")))
    if file_name:
        with open(file_name, 'w', encoding='utf-8') as f:
            s = text.get(1.0, END)
            f.write(s)

# üîπ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –¥–≤—É–º–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
def parse_matrix():
    lines = text.get(1.0, END).strip().split('\n')
    matrix = []
    for line in lines:
        row = list(map(int, line.strip().split()))
        matrix.append(row)
    return matrix

# üîπ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–≤—É–º–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤ —Ç–µ–∫—Å—Ç
def matrix_to_text(matrix):
    return '\n'.join(' '.join(map(str, row)) for row in matrix)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ç—Ä–∏—Ü—ã: –≥–ª–∞–≤–Ω–∞—è –¥–∏–∞–≥–æ–Ω–∞–ª—å = 1, –≤—ã—à–µ = 0, –Ω–∏–∂–µ = 2
def process_matrix():
    try:
        matrix = parse_matrix()
        n = len(matrix)
        for i in range(n):
            for j in range(n):
                if i == j:
                    matrix[i][j] = 1
                elif i < j:
                    matrix[i][j] = 0
                else:
                    matrix[i][j] = 2
        text.delete(1.0, END)
        text.insert(1.0, matrix_to_text(matrix))
    except Exception as e:
        text.insert(END, f"\n–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")

# üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—É—Å—Ç–æ–π –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã n x n
def generate_matrix():
    try:
        n = int(entry.get())
        matrix = [[0 for _ in range(n)] for _ in range(n)]
        text.delete(1.0, END)
        text.insert(1.0, matrix_to_text(matrix))
    except ValueError:
        text.insert(END, "\n–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")

# üîπ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
root = Tk()
root.title("–î–≤—É–º–µ—Ä–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã")

text = Text(width=50, height=15)
text.grid(row=0, column=0, columnspan=4, padx=10, pady=10)

entry = Entry(width=5)
entry.grid(row=1, column=0, padx=5)

Button(text="–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å n x n", command=generate_matrix).grid(row=1, column=1)
Button(text="–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –º–∞—Ç—Ä–∏—Ü—É", command=process_matrix).grid(row=1, column=2)
Button(text="–û—Ç–∫—Ä—ã—Ç—å", command=insert_text).grid(row=2, column=1, pady=5)
Button(text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=extract_text).grid(row=2, column=2)

root.mainloop()
