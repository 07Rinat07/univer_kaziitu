// класс условной базы данных
class Database{
    constructor(){
        this.data = ["Tom", "Sam", "Bob"];
    }
    // получение данных
    getItem(index){ 
        this.open();
        if(index > 0 && index < this.data.length)
            return this.data[index];
        else
            throw "Некорректный индекс";
        this.close();   // при генерации исключения эта строка не будет выполняться
    }
    // открытие бд
    open(){ console.log("Подключение к базе данных установлено"); }
    // закрытие бд
    close(){ console.log("Подключение к базе данных закрыто"); }
}
 
const db = new Database();
try {
    db.getItem(5);   // возвращаем полученный элемент
} catch(err) {
    console.error(err); // если произошла ошибка обрабатываем ее 
}


//**Здесь определен класс Database - класс условной базы данных. Все данные хранятся в массиве data. 
// Для взаимодействия с базой данных определены три метода. Методы open и close условно открывают и 
// закрывают подключение к базе данных. Метод getItem получает по индексу элемент из массива data. 
// Если же индекс некорректный, то генерируется ошибка. При этом до получения элемента по индексу 
// метод getItem должен открыть подключение методом open, а после получения - закрыть методом close. 
// Однако в примере выше при генерации ошибки закрытия подключения не произойдет: 
// */